{% macro pagination(tab) %}

<script src="/static/js/simplePagination.js"></script>

<div class="footer-stereotypes">
    <div id="pagination-{{tab}}"></div>
    <p id="pagination-text-{{tab}}"></p>
</div>

<script>
    let itemsPerPage{{tab}} = 4;
    let numItems{{tab}};

    if (matchMedia('(min-width: 900px)').matches) {
        itemsPerPage{{tab}} = 9999;
    }

    if ("{{tab}}" =='create'){
        createPagination();
    }
    else {
        setTimeout(() => { 
        // timeout needed for htmx to trigger on load query
            createPagination();
        }, "300");
    }


    function createPagination(){
        numItems{{tab}} = $(".tab-{{tab}}").length;

        return $('#pagination-{{tab}}').pagination({
            items: numItems{{tab}},
            itemsOnPage: itemsPerPage{{tab}},
            prevText: "<",
            nextText: ">",
            onInit: showCurrentItems{{tab}},
            onPageClick: showCurrentItems{{tab}},       
        });
    }

    function showCurrentItems{{tab}}(pageNumber=1) {
        const items = $(".tab-{{tab}}");
        const showItemsBehind = itemsPerPage{{tab}} * (pageNumber - 1);
        const showItemsFoward = showItemsBehind + Number(itemsPerPage{{tab}});

        let currentItems = items.hide().slice(showItemsBehind, showItemsFoward).show();
        let currentSerie = showItemsBehind + 1;

        text = " {{_('showing')}} " + currentSerie + " {{_('to')}} " + (showItemsBehind + currentItems.length).toString() + " {{_('from')}} " + numItems{{tab}};
        document.getElementById("pagination-text-{{tab}}").textContent = text;
        
    }
</script>
{% endmacro %}
